name: Build and Deploy News Site

on:
  # Bu, GitHub Actions arayüzünden manuel olarak iş akışını çalıştırmanıza olanak tanır.
  workflow_dispatch:

  # Bu, iş akışının belirli bir takvime göre otomatik olarak çalışmasını sağlar.
  # Her gün UTC saatiyle 03:00'te çalışır. API limitlerinizi göz önünde bulundurarak bu saati ayarlayabilirsiniz.
  schedule:
    - cron: '0 3 * * *'

  # Bu, ana brança (main) her push yapıldığında iş akışını çalıştırır.
  # Eğer sadece zamanlanmış çalıştırma istiyorsanız bu bloğu kaldırabilirsiniz.
  push:
    branches:
      - main # Ana brançınızın adı neyse onu kullanın (genellikle 'main' veya 'master')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # İş akışının çalışacağı işletim sistemi

    permissions: # BU BLOK ZATEN VARDI
      contents: write
      pages: write
      id-token: write

    environment: # YENİ EKLENECEK OLAN BLOK BURASI!
      name: github-pages # Ortamın adı, GitHub Pages için standarttır
      url: ${{ steps.deployment.outputs.page_url }} # Dağıtılan sitenin URL'si (isteğe bağlı ama iyi bir pratik)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # `static_site/themes/minimal` gibi alt modülleri dışlamak için ayar.
          # Bu, "submodule issue" hatasını çözmelidir.
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Kullandığınız Python sürümünü belirtin (ör: '3.9', '3.10', '3.11')

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Eğer projenizde requirements.txt varsa aşağıdaki satırı kullanın (önerilir!)
          # pip install -r requirements.txt
          # Gerekli kütüphaneleri manuel olarak yükle
          pip install Flask requests apscheduler python-dotenv
        # Bu adımda 'env:' bloğu kesinlikle OLMAMALI,
        # çünkü WORLD_NEWS_API_KEY'in pip kurulumuna karışmasına neden olabilir.

      - name: Run News Bot (Fetch News & Generate Hugo Content)
        env:
          # GitHub Secrets'tan API anahtarını ortam değişkeni olarak sağlar.
          # Bu, "WORLD_NEWS_API_KEY ortam değişkeni ayarlanmadı" hatasını çözmelidir.
          WORLD_NEWS_API_KEY: ${{ secrets.WORLD_NEWS_API_KEY }}
        run: |
          # Flask sunucusunu başlatmadan, haber çekme ve Hugo içeriği oluşturma mantığını doğrudan çağırıyoruz.
          # news_bot.py dosyasındaki 'run_news_processing_and_build' fonksiyonunu Python komutuyla çalıştır.
          # Bu komut, 'my_news_site_bot' ana dizininde çalışır.
          python -c "from news_bot import run_news_processing_and_build; run_news_processing_and_build()"
        # working-directory: ${{ github.workspace }} # Varsayılan olarak repo kök dizininde çalışır, bu satır gereksiz.

      - name: Build Hugo Site
        # Hugo'nun 'static_site' klasörü içinde çalışmasını sağlar
        working-directory: static_site
        run: |
          # Hugo CLI aracını indir ve kur (Ubuntu için .deb paketi)
          # Kullandığınız Hugo sürümünü ve işletim sistemini kontrol edin.
          wget https://github.com/gohugoio/hugo/releases/download/v0.92.2/hugo_extended_0.92.2_Linux-64bit.deb -O /tmp/hugo.deb
          sudo dpkg -i /tmp/hugo.deb

          # Hugo sitesini derle. -D taslakları da dahil eder.
          hugo -D

      # GitHub Pages için resmi artifact yükleme ve dağıtım aksiyonları
      - name: Upload Hugo Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./static_site/public # Hugo'nun çıktısının bulunduğu dizin

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # GitHub Pages'e dağıtım yapan resmi aksiyon